services:
    nginx:
        image: nginx:stable-alpine
        container_name: ${DB_DATABASE}_nginx
        restart: always
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - "8876:80"
        depends_on:
            - app
        networks:
            - app_network

    app:
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
            args:
                WWW_USER: '${WWW_USER}'
                WWW_GROUP: '${WWW_GROUP}'
        container_name: ${DB_DATABASE}_app
        restart: always
        volumes:
            - ./:/var/www
        depends_on:
            db:
                condition: service_healthy
        networks:
            - app_network

    db:
        image: mysql:8.4
        container_name: ${DB_DATABASE}_db
        restart: always
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        command:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 5s
            retries: 5
        networks:
            - app_network

    redis:
        image: redis:alpine
        container_name: ${DB_DATABASE}_redis
        restart: always
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - redis-data:/data
        networks:
            - app_network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

networks:
    app_network:
        driver: bridge

volumes:
    db-data:
        driver: local
    redis-data:
        driver: local
